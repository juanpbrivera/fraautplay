{
  "name": "@automation/web-automation-framework",
  "version": "1.0.0",
  "description": "Framework de automatización web con Playwright",
  "main": "dist/index.js",
  "module": "dist/index.esm.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "require": "./dist/index.js",
      "import": "./dist/index.esm.js",
      "types": "./dist/index.d.ts",
      "default": "./dist/index.esm.js"
    }
  },
  "files": [
    "dist",
    "README.md",
    "LICENSE"
  ],
  "scripts": {
    "clean": "node -e \"require('fs').rmSync('dist',{recursive:true,force:true})\"",
    "build:types": "tsc -p config/tsconfig.build.json --emitDeclarationOnly --declaration --declarationDir dist/types --declarationMap false",
    "build:jsprep": "tsc -p config/tsconfig.build.json --outDir dist/__tmp__ --emitDeclarationOnly false",
    "build:js": "rollup -c config/rollup.config.js",
    "postbuild": "node -e \"const fs=require('fs');let s=fs.readFileSync('dist/types/index.d.ts','utf8');s=s.replace(/from\\s+([\\'\\\"])\\.\\/types\\//g,'from $1./types/types/');s=s.replace(/from\\s+([\\'\\\"])\\.\\/(?!types\\/)/g,'from $1./types/');fs.writeFileSync('dist/index.d.ts',s);fs.rmSync('dist/__tmp__',{recursive:true,force:true});console.log('✔ tipos ajustados y temporal limpiado');\"",
    "build": "npm run clean && npm run build:types && npm run build:jsprep && npm run build:js"
  },
  "keywords": [
    "playwright",
    "automation",
    "testing",
    "web",
    "framework"
  ],
  "peerDependencies": {
    "@playwright/test": "^1.54.2"
  },
  "dependencies": {
    "csv-parser": "^3.2.0",
    "docx-templates": "^4.14.1",
    "dotenv": "^17.2.2",
    "pino": "^9.10.0",
    "pino-pretty": "^13.1.1"
  },
  "devDependencies": {
    "rollup": "^4.50.2",
    "@rollup/plugin-commonjs": "28.0.6",
    "@rollup/plugin-node-resolve": "16.0.1",
    "@types/node": "^24.1.0",
    "typescript": "^5.8.3"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}